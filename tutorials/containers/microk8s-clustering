---
id: raspberry-pi-microk8s-instructions
summary: Create a raspberry pi cluser using microk8s
categories: iot
tags: kubernetes, multipass, container, microk8s, cluster
difficulty: 3
status: draft
published: 2020-01-20
author: Ammar Naqvi <ammar.naqvi@canonical.com>, Rhys Davies <rhys.davies@canonical.com>
feedback_url: https://github.com/ubuntu/microk8s/issues/

---
# How to bild a Raspberry Pi cluster using microk8s

##Overview
Duration: 1:00

This tutorial will be a brief walk through of the process of getting [MicroK8s][microk8s] up and running on Raspberry Pis for all your clustering needs. [MicroK8s][microk8s] is a light weight, fast, enterprise-grade Kubernetes! So whether you're new to Kubernetes or a legacy user, [MicroK8s][microk8s] will help you save time and space on any embedded device or IoT projects. 

By the end of this tutorial we hope you will be able to now join multiple deployments of [MicroK8s][microk8s] to form a cluster.

### What you'll need

- Ubuntu Desktop 16.04 or above
- 2 Raspberry Pi boards (2 is the minimum, you can use as many as you like)
- 2 micro SD cards (You need as many micro SD cards as you have Raspberry Pis)
- 2 micro-USB power cables (One per Raspberry Pi)
- 1 2-port USB power-supply (You need as many ports as you have boards)
- Some basic command-line knowledge

You will also need all of the Pis to be on the same network, and with a terminal windows ready to connect to each through SSH.


## Setting up the Pis




## Setting up the cluster
Duration 2:00

On two or more machines install MicroK8s from the 1.15/edge/clustering channel like this:

```bash
sudo snap install microk8s --classic --channel=1.15/edge/clustering
```

One of these machines need to be assigned as the master, hosting the control plane. On the master machine, run the following command for each node you want to add:

```bash
sudo microk8s.add-node
```

The microk8s.add-node will generate a connection string in the form of <master_ip>:<port>/<token> and will prompt you to use the microk8s.

##Joining the cluster
Duration: 2:00

Now you need to use the join command from the node you want to add to the cluster. 

A join command instructing a node to form a cluster with the master will look like:

```bash
microk8s.join 10.55.60.14:25000/JHpbBYMlevZSAMnmjMHmFwanrOYCWZLu
```

You should be able to see the new node in a few seconds on the master. Run the following command:

```bash
microk8s.kubectl get node
```

## Removing nodes
Duration: 1:00 

To remove a node, run the following command on the master:

```bash
sudo microk8s.remove <node-name>
```

Alternatively, on the slave node you can run:

```bash
sudo microk8s.leave
```

##That's it!
Duration: 1:00

You have successfully joined the node to the cluster! Repeat this microk8s.add-node and microk8s.join steps for each node you are adding.
 

# What’s next

The opportunities for innovation are endless and we can’t wait to explore what you come up with! For feedback, bug reports or contributing, reach out on [Github][github], chat with us on the [Kubernetes Slack][k8s-slack], in the #microk8s channel, [Kubernetes Forum][k8s-forum] or tag us [@canonical][canonical-twitter], [@ubuntu][ubuntu-twitter] on Twitter (#MicroK8s). We are excited to hear your feedback!

<!-- LINKS -->
[k8s-forum]: https://discuss.kubernetes.io/tags/microk8s
[microk8s]: https://microk8s.io/
[k8s-slack]:https://slack.kubernetes.io/
[github]:https://github.com/ubuntu/microk8s
[ubuntu-twitter]: https://twitter.com/Ubuntu
[canonical-twitter]: https://twitter.com/canonical
